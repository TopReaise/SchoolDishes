# Generated by Django 2.2.5 on 2021-11-26 02:54

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('sex', models.CharField(choices=[('0', '男'), ('1', '女')], default=0, max_length=1, verbose_name='性别')),
                ('mobile', models.CharField(max_length=11, unique=True, verbose_name='手机号')),
                ('head_photo', models.CharField(default='', max_length=120, verbose_name='头像')),
                ('stu_id', models.CharField(default='00001', max_length=18, verbose_name='学号')),
            ],
            options={
                'verbose_name': '用戶',
                'verbose_name_plural': '用戶',
                'db_table': 'tb_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Canteen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建数据的时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新数据的时间')),
                ('can_name', models.CharField(max_length=120, verbose_name='食堂名字')),
                ('can_addr', models.CharField(max_length=120, verbose_name='食堂地址')),
                ('can_tel', models.CharField(max_length=11, verbose_name='食堂电话')),
                ('can_head', models.CharField(default='', max_length=120, verbose_name='头像')),
                ('can_people', models.CharField(max_length=15, verbose_name='食堂负责人')),
            ],
            options={
                'verbose_name': '食堂',
                'verbose_name_plural': '食堂',
                'db_table': 'tb_canteen',
                'ordering': ['-update_time'],
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建数据的时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新数据的时间')),
                ('sch_name', models.CharField(max_length=120, verbose_name='学校名字')),
                ('sch_addr', models.CharField(max_length=120, verbose_name='学校地址')),
                ('sch_tel', models.CharField(max_length=11, verbose_name='学校电话')),
                ('sch_head', models.CharField(default='', max_length=120, verbose_name='头像')),
                ('sch_code', models.CharField(max_length=18, verbose_name='学校代码')),
                ('sch_people', models.CharField(max_length=15, verbose_name='学校负责人')),
            ],
            options={
                'verbose_name': '学校',
                'verbose_name_plural': '学校',
                'db_table': 'tb_school',
                'ordering': ['-update_time'],
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建数据的时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新数据的时间')),
                ('title', models.CharField(max_length=20, verbose_name='地址名称')),
                ('place', models.CharField(max_length=50, verbose_name='地址')),
                ('mobile', models.CharField(max_length=11, verbose_name='手机')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='逻辑删除')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '地址',
                'verbose_name_plural': '地址',
                'db_table': 'tb_address',
                'ordering': ['-update_time'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='default_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='users.Address', verbose_name='默认地址'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='schId',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stus', to='users.School', verbose_name='学校ID'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
